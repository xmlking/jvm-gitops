{
    "id": "karate-quarkus-demo-realm",
    "realm": "karate-quarkus-demo-realm",
    "displayName": "karate-quarkus-demo-realm",
    "notBefore": 0,
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
        "realm": [
            {
                "id": "d82565c3-8152-4b4b-82c1-b5f6de4224d9",
                "name": "user",
                "composite": false,
                "clientRole": false,
                "containerId": "karate-quarkus-demo-realm",
                "attributes": {}
            },
            {
                "id": "0a8104c5-0f1e-43b9-b50c-e7f234e2fda1",
                "name": "offline_access",
                "description": "${role_offline-access}",
                "composite": false,
                "clientRole": false,
                "containerId": "karate-quarkus-demo-realm",
                "attributes": {}
            },
            {
                "id": "05e3ae0c-571c-4cf2-b302-cbfd2288c0d9",
                "name": "admin",
                "composite": false,
                "clientRole": false,
                "containerId": "karate-quarkus-demo-realm",
                "attributes": {}
            },
            {
                "id": "20a821cc-a55c-4e1c-9881-c6aa9a53db36",
                "name": "TODOS_ADMIN",
                "composite": false,
                "clientRole": false,
                "containerId": "karate-quarkus-demo-realm",
                "attributes": {}
            },
            {
                "id": "f1d2d32a-a90c-443a-8029-5fb511142b53",
                "name": "uma_authorization",
                "description": "${role_uma_authorization}",
                "composite": false,
                "clientRole": false,
                "containerId": "karate-quarkus-demo-realm",
                "attributes": {}
            }
        ],
        "client": {
            "realm-management": [
                {
                    "id": "f20eae81-2849-423b-851c-869e7e065f93",
                    "name": "manage-events",
                    "description": "${role_manage-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "f2f7a19d-16b3-4629-b06b-aff077444fec",
                    "attributes": {}
                },
                {
                    "id": "4663fa99-898b-4d15-a30c-ce7b143cf161",
                    "name": "realm-admin",
                    "description": "${role_realm-admin}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "manage-events",
                                "query-users",
                                "impersonation",
                                "manage-identity-providers",
                                "manage-users",
                                "query-clients",
                                "create-client",
                                "view-users",
                                "manage-realm",
                                "view-events",
                                "query-realms",
                                "query-groups",
                                "view-identity-providers",
                                "view-clients",
                                "view-authorization",
                                "manage-clients",
                                "manage-authorization",
                                "view-realm"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "f2f7a19d-16b3-4629-b06b-aff077444fec",
                    "attributes": {}
                },
                {
                    "id": "7aef8a27-01e5-4c8b-8f3d-6795a001be0b",
                    "name": "query-users",
                    "description": "${role_query-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "f2f7a19d-16b3-4629-b06b-aff077444fec",
                    "attributes": {}
                },
                {
                    "id": "29e2a91c-fd44-49d2-95d4-b2dac071728a",
                    "name": "impersonation",
                    "description": "${role_impersonation}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "f2f7a19d-16b3-4629-b06b-aff077444fec",
                    "attributes": {}
                },
                {
                    "id": "9a9dc1b3-aded-4ca4-a47e-ff0bcdaa7da4",
                    "name": "manage-identity-providers",
                    "description": "${role_manage-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "f2f7a19d-16b3-4629-b06b-aff077444fec",
                    "attributes": {}
                },
                {
                    "id": "5b9ddf2c-da6c-47f2-9f59-ce9bacbb7e29",
                    "name": "manage-users",
                    "description": "${role_manage-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "f2f7a19d-16b3-4629-b06b-aff077444fec",
                    "attributes": {}
                },
                {
                    "id": "b03be07e-25b5-42ec-8f57-1f4e43290416",
                    "name": "query-clients",
                    "description": "${role_query-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "f2f7a19d-16b3-4629-b06b-aff077444fec",
                    "attributes": {}
                },
                {
                    "id": "6e9a92cf-ee51-4083-8440-a3f088900d2f",
                    "name": "create-client",
                    "description": "${role_create-client}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "f2f7a19d-16b3-4629-b06b-aff077444fec",
                    "attributes": {}
                },
                {
                    "id": "89a67b7b-ec97-4a71-8db7-f68dd0d42316",
                    "name": "view-users",
                    "description": "${role_view-users}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "query-groups",
                                "query-users"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "f2f7a19d-16b3-4629-b06b-aff077444fec",
                    "attributes": {}
                },
                {
                    "id": "82494245-283c-43ff-b244-a3ac66e681d1",
                    "name": "manage-realm",
                    "description": "${role_manage-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "f2f7a19d-16b3-4629-b06b-aff077444fec",
                    "attributes": {}
                },
                {
                    "id": "586ce9a1-5329-43bd-91ce-d3b1f85daf79",
                    "name": "view-events",
                    "description": "${role_view-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "f2f7a19d-16b3-4629-b06b-aff077444fec",
                    "attributes": {}
                },
                {
                    "id": "43342a1d-4dd0-4877-8ebf-38c3a07af5d7",
                    "name": "query-realms",
                    "description": "${role_query-realms}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "f2f7a19d-16b3-4629-b06b-aff077444fec",
                    "attributes": {}
                },
                {
                    "id": "ba667398-9d88-4456-8c6f-4fa387a2a620",
                    "name": "query-groups",
                    "description": "${role_query-groups}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "f2f7a19d-16b3-4629-b06b-aff077444fec",
                    "attributes": {}
                },
                {
                    "id": "f101b1bf-a6b1-4371-9d7e-60a6682f1756",
                    "name": "view-identity-providers",
                    "description": "${role_view-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "f2f7a19d-16b3-4629-b06b-aff077444fec",
                    "attributes": {}
                },
                {
                    "id": "355fb17b-db1c-40ed-91b3-cf531361c1c1",
                    "name": "view-clients",
                    "description": "${role_view-clients}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "query-clients"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "f2f7a19d-16b3-4629-b06b-aff077444fec",
                    "attributes": {}
                },
                {
                    "id": "46c1d2ca-0845-4351-8500-5b75a5a96998",
                    "name": "view-authorization",
                    "description": "${role_view-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "f2f7a19d-16b3-4629-b06b-aff077444fec",
                    "attributes": {}
                },
                {
                    "id": "c35ef2b6-fed2-43de-8869-9ea7c8b5b242",
                    "name": "manage-clients",
                    "description": "${role_manage-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "f2f7a19d-16b3-4629-b06b-aff077444fec",
                    "attributes": {}
                },
                {
                    "id": "fbce489c-bbe5-42fd-8459-4df9ecb43e12",
                    "name": "manage-authorization",
                    "description": "${role_manage-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "f2f7a19d-16b3-4629-b06b-aff077444fec",
                    "attributes": {}
                },
                {
                    "id": "da30920f-2be8-4001-a12c-9268cd60f8fd",
                    "name": "view-realm",
                    "description": "${role_view-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "f2f7a19d-16b3-4629-b06b-aff077444fec",
                    "attributes": {}
                }
            ],
            "karate-quarkus-demo": [
                {
                    "id": "b3942136-0c9f-4699-a5f6-dff8b83200bf",
                    "name": "uma_protection",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "72e67a6c-883e-4472-babf-b84bf38199ca",
                    "attributes": {}
                }
            ],
            "security-admin-console": [],
            "admin-cli": [],
            "account-console": [],
            "broker": [
                {
                    "id": "00e1de73-4c13-4e8f-93f9-3b0141e74053",
                    "name": "read-token",
                    "description": "${role_read-token}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "25a4c8ba-1ed1-4c3a-a6cb-a8fb1bfb2883",
                    "attributes": {}
                }
            ],
            "account": [
                {
                    "id": "3765f709-9f62-4cd8-8303-d12750a4ae85",
                    "name": "view-consent",
                    "description": "${role_view-consent}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "321351e1-8f5f-4d5e-af52-114d3f28cdab",
                    "attributes": {}
                },
                {
                    "id": "1dabe22a-33fc-473d-ab68-ca5246d9241c",
                    "name": "manage-account",
                    "description": "${role_manage-account}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "account": [
                                "manage-account-links"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "321351e1-8f5f-4d5e-af52-114d3f28cdab",
                    "attributes": {}
                },
                {
                    "id": "ccaf46a1-338a-4d43-939f-4742beda3e9f",
                    "name": "manage-consent",
                    "description": "${role_manage-consent}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "account": [
                                "view-consent"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "321351e1-8f5f-4d5e-af52-114d3f28cdab",
                    "attributes": {}
                },
                {
                    "id": "78102845-8115-42c1-9f36-7f3ef63b50b5",
                    "name": "view-applications",
                    "description": "${role_view-applications}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "321351e1-8f5f-4d5e-af52-114d3f28cdab",
                    "attributes": {}
                },
                {
                    "id": "94cf9982-3061-46d6-bb1d-2b7804982119",
                    "name": "manage-account-links",
                    "description": "${role_manage-account-links}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "321351e1-8f5f-4d5e-af52-114d3f28cdab",
                    "attributes": {}
                },
                {
                    "id": "05d2fbae-21d2-45f6-bb70-43d2a35d75cf",
                    "name": "view-profile",
                    "description": "${role_view-profile}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "321351e1-8f5f-4d5e-af52-114d3f28cdab",
                    "attributes": {}
                }
            ]
        }
    },
    "groups": [],
    "defaultRoles": [
        "offline_access",
        "uma_authorization"
    ],
    "requiredCredentials": [
        "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpSupportedApplications": [
        "FreeOTP",
        "Google Authenticator"
    ],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
        "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
        "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "users": [
        {
            "id": "b5b4f516-67e1-4920-92e4-a6a35b1a7bc2",
            "createdTimestamp": 1589561250936,
            "username": "service-account-karate-quarkus-demo",
            "enabled": true,
            "totp": false,
            "emailVerified": false,
            "serviceAccountClientId": "karate-quarkus-demo",
            "credentials": [],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
                "offline_access",
                "uma_authorization"
            ],
            "clientRoles": {
                "karate-quarkus-demo": [
                    "uma_protection"
                ],
                "account": [
                    "manage-account",
                    "view-profile"
                ]
            },
            "notBefore": 0,
            "groups": []
        },
        {
            "id": "e7d33bb7-6bd1-4d88-bde3-1e1d4f33651a",
            "createdTimestamp": 1589563091922,
            "username": "todo-list-user",
            "enabled": true,
            "totp": false,
            "emailVerified": false,
            "credentials": [
                {
                    "id": "e5f367de-a8f7-49e0-bf8f-696adfc5e67b",
                    "type": "password",
                    "createdDate": 1589563098661,
                    "secretData": "{\"value\":\"l8A2+cBdSxscsfYvOpxB4sQ1V2TbhCsfhA3GbotspReuPEqW4dhCkzF6V6y3pUl419Im2hdnPsHnx8UP5Wxzlw==\",\"salt\":\"fFcfSgYVkslFwTz2vJlv1g==\"}",
                    "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\"}"
                }
            ],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
                "offline_access",
                "TODOS_ADMIN",
                "uma_authorization"
            ],
            "clientRoles": {
                "account": [
                    "manage-account",
                    "view-profile"
                ]
            },
            "notBefore": 0,
            "groups": []
        }
    ],
    "scopeMappings": [
        {
            "clientScope": "offline_access",
            "roles": [
                "offline_access"
            ]
        }
    ],
    "clientScopeMappings": {
        "account": [
            {
                "client": "account-console",
                "roles": [
                    "manage-account"
                ]
            }
        ]
    },
    "clients": [
        {
            "id": "321351e1-8f5f-4d5e-af52-114d3f28cdab",
            "clientId": "account",
            "name": "${client_account}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/karate-quarkus-demo-realm/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "**********",
            "defaultRoles": [
                "manage-account",
                "view-profile"
            ],
            "redirectUris": [
                "/realms/karate-quarkus-demo-realm/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "role_list",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "dc5519c9-1dca-4680-a08e-0c9472ceda96",
            "clientId": "account-console",
            "name": "${client_account-console}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/karate-quarkus-demo-realm/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "**********",
            "redirectUris": [
                "/realms/karate-quarkus-demo-realm/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
                {
                    "id": "827da111-d8e8-429e-9aab-c8505238439d",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config": {}
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "role_list",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "c146b152-e038-408a-9bf5-9c4d20b4c055",
            "clientId": "admin-cli",
            "name": "${client_admin-cli}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "**********",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "role_list",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "25a4c8ba-1ed1-4c3a-a6cb-a8fb1bfb2883",
            "clientId": "broker",
            "name": "${client_broker}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "**********",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "role_list",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "72e67a6c-883e-4472-babf-b84bf38199ca",
            "clientId": "karate-quarkus-demo",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "19f745ce-5452-467f-bad8-ee14184240e5",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": true,
            "authorizationServicesEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "saml.assertion.signature": "false",
                "saml.multivalued.roles": "false",
                "saml.force.post.binding": "false",
                "saml.encrypt": "false",
                "saml.server.signature": "false",
                "saml.server.signature.keyinfo.ext": "false",
                "exclude.session.state.from.auth.response": "false",
                "saml_force_name_id_format": "false",
                "saml.client.signature": "false",
                "tls.client.certificate.bound.access.tokens": "false",
                "saml.authnstatement": "false",
                "display.on.consent.screen": "false",
                "saml.onetimeuse.condition": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers": [
                {
                    "id": "72d61ec9-52d7-4d1a-9148-79622f82053a",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientHost",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "61f50502-3bac-4e09-8e38-f06a38ad7500",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientId",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientId",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "413f6ceb-dd18-4a06-b1d6-ac0905216007",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientAddress",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "role_list",
                "profile",
                "roles",
                "todo_list",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ],
            "authorizationSettings": {
                "allowRemoteResourceManagement": true,
                "policyEnforcementMode": "ENFORCING",
                "resources": [
                    {
                        "name": "todos",
                        "ownerManagedAccess": false,
                        "displayName": "todos",
                        "attributes": {},
                        "_id": "90df93c5-3ad1-4255-9012-2e04d58823e4",
                        "uris": [
                            "/api/todos/**",
                            "/api/todos"
                        ],
                        "scopes": [
                            {
                                "name": "todos:create"
                            },
                            {
                                "name": "todos:read"
                            },
                            {
                                "name": "todos:modify"
                            },
                            {
                                "name": "todos:delete"
                            }
                        ]
                    },
                    {
                        "name": "Default Resource",
                        "type": "urn:karate-quarkus-demo:resources:default",
                        "ownerManagedAccess": false,
                        "attributes": {},
                        "_id": "56e413eb-5c28-4850-a718-d64e91e2f0a1",
                        "uris": [
                            "/*"
                        ]
                    }
                ],
                "policies": [
                    {
                        "id": "2bee2021-9fbc-47d4-83d4-1145c404b3c7",
                        "name": "A policy that grants access only to users with TODOS_ADMIN role",
                        "type": "role",
                        "logic": "POSITIVE",
                        "decisionStrategy": "UNANIMOUS",
                        "config": {
                            "roles": "[{\"id\":\"TODOS_ADMIN\",\"required\":true}]"
                        }
                    },
                    {
                        "id": "57911d91-029f-4ff3-8e56-833bcd74af08",
                        "name": "Allow a todos admin to manage todos",
                        "description": "Allow a todos admin to manage todos",
                        "type": "scope",
                        "logic": "POSITIVE",
                        "decisionStrategy": "AFFIRMATIVE",
                        "config": {
                            "scopes": "[\"todos:create\",\"todos:delete\",\"todos:modify\",\"todos:read\"]",
                            "applyPolicies": "[\"A policy that grants access only to users with TODOS_ADMIN role\"]"
                        }
                    }
                ],
                "scopes": [
                    {
                        "id": "6dcb713c-ea2c-4f8e-87d8-abd05a7528d8",
                        "name": "todos:modify"
                    },
                    {
                        "id": "39e8e7cd-1fc0-4037-8ab3-340298443f1e",
                        "name": "todos:delete"
                    },
                    {
                        "id": "5fed8c41-95ef-4abe-a43e-7d643f77be08",
                        "name": "todos:read"
                    },
                    {
                        "id": "b19e5de6-d04a-49f9-a237-b721389f3f77",
                        "name": "todos:create"
                    }
                ],
                "decisionStrategy": "UNANIMOUS"
            }
        },
        {
            "id": "f2f7a19d-16b3-4629-b06b-aff077444fec",
            "clientId": "realm-management",
            "name": "${client_realm-management}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "**********",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "role_list",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "8fb61c56-b39e-435a-82ad-86fcdde64be9",
            "clientId": "security-admin-console",
            "name": "${client_security-admin-console}",
            "rootUrl": "${authAdminUrl}",
            "baseUrl": "/admin/karate-quarkus-demo-realm/console/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "**********",
            "redirectUris": [
                "/admin/karate-quarkus-demo-realm/console/*"
            ],
            "webOrigins": [
                "+"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
                {
                    "id": "94afeae9-2fa5-405a-8a5e-139ebc10cea5",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "role_list",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        }
    ],
    "clientScopes": [
        {
            "id": "704360e7-e0f3-4ea5-ab99-3888bd75d6c8",
            "name": "todo_list",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "d9545c9f-5a57-4e64-8b41-82355d3d34d9",
                    "name": "todo_list",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "todo_list",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "todo_list",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "af73362f-c647-430e-86a3-4e55f0ac487b",
            "name": "web-origins",
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false",
                "consent.screen.text": ""
            },
            "protocolMappers": [
                {
                    "id": "52e6d638-2376-4bae-aee0-660b9c49aa55",
                    "name": "allowed web origins",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-allowed-origins-mapper",
                    "consentRequired": false,
                    "config": {}
                }
            ]
        },
        {
            "id": "48d760ad-1928-4075-9d8e-a6225c46ffbc",
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${rolesScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "1127aa06-d4ad-4ff5-bc62-da62d7eedac7",
                    "name": "client roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-client-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute": "foo",
                        "access.token.claim": "true",
                        "claim.name": "resource_access.${client_id}.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                },
                {
                    "id": "58e382c8-d77d-4fd4-90c2-09167d9a22f4",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config": {}
                },
                {
                    "id": "0cf95009-5158-4863-921d-0fbb0f6fa743",
                    "name": "realm roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute": "foo",
                        "access.token.claim": "true",
                        "claim.name": "realm_access.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                }
            ]
        },
        {
            "id": "99f2cdde-82a1-413b-adc2-babb0fbac630",
            "name": "role_list",
            "description": "SAML role list",
            "protocol": "saml",
            "attributes": {
                "consent.screen.text": "${samlRoleListScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "a6c4d825-194e-40c7-9768-db3b75dc6ccf",
                    "name": "role list",
                    "protocol": "saml",
                    "protocolMapper": "saml-role-list-mapper",
                    "consentRequired": false,
                    "config": {
                        "single": "false",
                        "attribute.nameformat": "Basic",
                        "attribute.name": "Role"
                    }
                }
            ]
        },
        {
            "id": "784c4948-05e9-4ef7-a9c8-fdf2c2953950",
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${profileScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "d58c580d-db24-44da-929e-8b1b364c0eaf",
                    "name": "middle name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "middleName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "middle_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "c6ba456c-e38d-476b-9d97-55b68ba43c2d",
                    "name": "username",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "preferred_username",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "2b816184-c761-4d8c-bfa5-8f5e90c7b408",
                    "name": "gender",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "gender",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "gender",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "9ae2884e-a154-4068-8801-721e34ed3b8d",
                    "name": "updated at",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "updatedAt",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "updated_at",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "4cb9a0a1-7119-4257-baa2-3796812ae423",
                    "name": "given name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "firstName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "given_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "31ed22b5-9e89-4953-ab08-d945dbbd21bf",
                    "name": "nickname",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "nickname",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "nickname",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "376c23a6-d741-4860-98b3-51b29eff4a07",
                    "name": "zoneinfo",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "zoneinfo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "zoneinfo",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "9a020035-b388-417f-b9d5-c322dd1850a1",
                    "name": "family name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "lastName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "family_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "adcd2900-ceaf-4f91-8584-40aac06a5973",
                    "name": "website",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "website",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "website",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "2d5e0c85-dfba-4354-b46d-d5e59a42affe",
                    "name": "full name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-full-name-mapper",
                    "consentRequired": false,
                    "config": {
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "userinfo.token.claim": "true"
                    }
                },
                {
                    "id": "5c605a99-e8ac-4f1d-bd34-71f4e70402f4",
                    "name": "birthdate",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "birthdate",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "birthdate",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "01e5c991-26b3-4149-838b-67cdae11a6c9",
                    "name": "profile",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "profile",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "profile",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "a622a189-8b50-42f8-847e-a44ba12724d4",
                    "name": "picture",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "picture",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "picture",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "783e81d6-1fc4-4c89-9caa-3c162863a5af",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "dd541dbd-4c93-421d-8e55-5b9329309ee9",
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${phoneScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "73f7d195-a97c-475b-a431-0a69ef020c00",
                    "name": "phone number verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumberVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number_verified",
                        "jsonType.label": "boolean"
                    }
                },
                {
                    "id": "037478dc-c286-4f8f-aec3-daf007a6fc05",
                    "name": "phone number",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumber",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "788605aa-677d-4c00-b66f-7b09d8aa5212",
            "name": "offline_access",
            "description": "OpenID Connect built-in scope: offline_access",
            "protocol": "openid-connect",
            "attributes": {
                "consent.screen.text": "${offlineAccessScopeConsentText}",
                "display.on.consent.screen": "true"
            }
        },
        {
            "id": "1aef7b2a-6041-4adf-abe0-2c6ad356f4b6",
            "name": "microprofile-jwt",
            "description": "Microprofile - JWT built-in scope",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "99cf8f8c-9f48-470d-b7d9-c17639a3cf09",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "multivalued": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "foo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "groups",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "95abfce2-3bfa-4f94-8045-943912092819",
                    "name": "upn",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "upn",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "5cab7c0d-630d-449c-b0fa-4101cbfcf199",
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${emailScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "8833aaa3-2950-4e5a-98b9-849ae1277a4f",
                    "name": "email",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "email",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "e8b12134-cf2b-414c-89f7-eb623299c4ec",
                    "name": "email verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "emailVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email_verified",
                        "jsonType.label": "boolean"
                    }
                }
            ]
        },
        {
            "id": "7eb8f230-0069-4ee6-9450-b914bc9897d9",
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${addressScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "74fb43f1-6ff6-44c9-b661-b7c1a9dfa4b1",
                    "name": "address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-address-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute.formatted": "formatted",
                        "user.attribute.country": "country",
                        "user.attribute.postal_code": "postal_code",
                        "userinfo.token.claim": "true",
                        "user.attribute.street": "street",
                        "id.token.claim": "true",
                        "user.attribute.region": "region",
                        "access.token.claim": "true",
                        "user.attribute.locality": "locality"
                    }
                }
            ]
        }
    ],
    "defaultDefaultClientScopes": [
        "role_list",
        "profile",
        "email",
        "roles",
        "web-origins"
    ],
    "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt"
    ],
    "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "loginTheme": "karate-quarkus-demo-realm",
    "eventsEnabled": false,
    "eventsListeners": [
        "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
            {
                "id": "92ae4f95-bd3a-4da0-84c1-24e550f8cf80",
                "name": "Full Scope Disabled",
                "providerId": "scope",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
            },
            {
                "id": "31f082e0-5731-4308-9146-4594e6b8ad28",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                    "allow-default-scopes": [
                        "true"
                    ]
                }
            },
            {
                "id": "54101b4a-de8b-4dac-9c4b-58df56014d38",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "allow-default-scopes": [
                        "true"
                    ]
                }
            },
            {
                "id": "848c8a98-4f24-485f-8b58-c107628380b1",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "allowed-protocol-mapper-types": [
                        "oidc-usermodel-property-mapper",
                        "oidc-address-mapper",
                        "oidc-full-name-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "saml-role-list-mapper",
                        "saml-user-attribute-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "saml-user-property-mapper"
                    ]
                }
            },
            {
                "id": "d7138cbc-4164-4786-81f7-d534262cdb81",
                "name": "Consent Required",
                "providerId": "consent-required",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
            },
            {
                "id": "3e468324-6614-4e21-8863-5f8dc4f07f13",
                "name": "Trusted Hosts",
                "providerId": "trusted-hosts",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "host-sending-registration-request-must-match": [
                        "true"
                    ],
                    "client-uris-must-match": [
                        "true"
                    ]
                }
            },
            {
                "id": "1c630c76-fccc-447d-851d-1034d5c56652",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                    "allowed-protocol-mapper-types": [
                        "oidc-sha256-pairwise-sub-mapper",
                        "saml-user-property-mapper",
                        "oidc-address-mapper",
                        "saml-role-list-mapper",
                        "oidc-full-name-mapper",
                        "oidc-usermodel-property-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "saml-user-attribute-mapper"
                    ]
                }
            },
            {
                "id": "b2a0af7d-3053-4f25-8173-63babbc1ac6c",
                "name": "Max Clients Limit",
                "providerId": "max-clients",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "max-clients": [
                        "200"
                    ]
                }
            }
        ],
        "org.keycloak.keys.KeyProvider": [
            {
                "id": "655a2cbc-c2c9-484b-80b6-2c58b5e76aa5",
                "name": "rsa-generated",
                "providerId": "rsa-generated",
                "subComponents": {},
                "config": {
                    "privateKey": [
                        "MIIEowIBAAKCAQEAh74rd2AbYqz9r12Ql/1NpkNZVQyDJYnYk0/+ikvgVy0gk7zwS991Q+/Wl7hiJxAiEEaniy6+R14YJV5r+UPZ+juMw4S9vPn4y7HoawZE5sgoYwKHejVH58GBkqffVXuuK1L8Z/p9Bp7AK2EjAemfiD/tNJ0m7ZUUmn2ISdNWABL/GswesIYMjQPMA3uv28QtRS7LYdUMdqh5FpKcJQ5MwLslo/56cD1vaUl5yNv157bEwagKqcMnZzIIHGFqoAt6h/7kcXKoZCK6zeZMgh4IeB2d3WtaTEsWLuSQ1kttZ5xgBVrpsE1WIn798lSxGpwoljQ2QodvO6GRsC/EHXl9LQIDAQABAoIBADqQ/kf/G1GzubCT+fLZw0rc/AoJ3/uuQdctSHF600xJmCil+DeELiAltry3PQIFn+zNzzPp8wbvvhNBbeyaLc4dK1qgRwzl/UZFeDXU+p1n9qThTnqXynJftvwDmgRT3I2svGJQXOkiTV9qBaSpm785daqhs04GaGFPkCHqIMzewlIPwmR5XGAOMiVW4FvapuBrwTtovI1aN/MnhAO3xXJibrAhkxsnCltGV2a1+cUF/MAeIMZMU+hCDanxH+4h8499B/nf+Waemt5VgwqLa6LR9HAVkVLqYkbjGSkn5Pj7mdFNcKHpJA6OjHivENhqwSguAHwXLkv3Z8BN1EijBQECgYEA260IAZJceE/tH3Thk4wbtpZzRYP4GEObc7hSx7tJCy8X62EvdngVY3RC7TCU+pFXCrHKdAVEB4MFMOAN3ePa4QUxD3S0fwbcSRw5Y5GWcRzoADCrd0pYbcxcCfdfLHCAUJWyeXTe6RzkHSOMaOnNMhw72IXbNG/RQIBhiHnKUXECgYEAnjA4CDhPvczM6+Z8N+HBklvZmieBZ3N8zZ8mhfrGcM8qxMIQWnFiDHFzv24vAOMkSGbmKccuF8YiuDMs0c2FAA6orkivWz6QtN0FTAWVjN6513Rht2aptga3mu5pwPm2PHFLWYgU0ECTIxZPYmDeYDt4vYqgnpMfaX1BBwieyX0CgYAtrv00PnjGeHCqkwb6RS/aN81/DmPAwAaK+TEV4kfdcIy74XkaXPytsxbb9rd0qFb+nVyp5hJwsXmZ4W5gz6rMEuVR/oYuyIF1Hs58e2Fa4pUIvRZbd3WOV+poFC6Rsk+s8oSsJ3bX6a8ytBrWEpEes6pqa+PbMsnEbS5bUGCXsQKBgG6/H1tR4THmAcld0bVlzhljSJLN+aCtj8B9HYFLMkakIzMhEkXff19qxjhNMYcTfsFZmOXC1pg6VPBUk5pGokiJ+roZlPrycGjPG/g/KJY5EC6xAgBeVY5kYYKMS2mY6WajgrcpuDicHObBpc4gN090E3HPbefW5HT8BdygwloZAoGBALdQ47OGc+Cz2CK83Z/SCFbRrguOYGH571Aiv2p0xeUA3pZ8rAeasW4Bg4zCJWPQJ4GlXBvF44nKcemTz/MZ3d1KHfhbnCAom6fzsB0yYCAGznY7lKcgWoJ+insvbgo1Uqb9uZ3xjHssVWjThVO0yPoNoZiosg7cicyvmt1ABjvy"
                    ],
                    "certificate": [
                        "MIIClzCCAX8CBgFxxg9XVzANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDARoZXlwMB4XDTIwMDQyOTEzMDg0NloXDTMwMDQyOTEzMTAyNlowDzENMAsGA1UEAwwEaGV5cDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIe+K3dgG2Ks/a9dkJf9TaZDWVUMgyWJ2JNP/opL4FctIJO88EvfdUPv1pe4YicQIhBGp4suvkdeGCVea/lD2fo7jMOEvbz5+Mux6GsGRObIKGMCh3o1R+fBgZKn31V7ritS/Gf6fQaewCthIwHpn4g/7TSdJu2VFJp9iEnTVgAS/xrMHrCGDI0DzAN7r9vELUUuy2HVDHaoeRaSnCUOTMC7JaP+enA9b2lJecjb9ee2xMGoCqnDJ2cyCBxhaqALeof+5HFyqGQius3mTIIeCHgdnd1rWkxLFi7kkNZLbWecYAVa6bBNViJ+/fJUsRqcKJY0NkKHbzuhkbAvxB15fS0CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEADhZoygADxyo14/LMhB6Yw8Jos07cpH6QPT3EiBuqv8df3gbvUKrb25NXUh4Xpf7uyMUDrA/YIF7ZSL3iOvzFBimDCF6YKYIgbxf2xznesKUdtNmQw/l8/ufPPBlWmW1dKa5ydTOd41CCSxlyhpb2EOVrAM81tXYpIpTyiillnrId4z1ZNkNrTp13Ns6bONTWzEXAvOpeiT+57RCwWczCxqQUSgPP3UPJ8Ve85zsuEq7bop6mCMxvFJKPMnEotoV3nUV62VTJP7RUmX99w/iTk6WkhfCzqgz1kSyU1nKuKnXnyGcDOzbpdbUmxnmK8m//UGfg4WCIYflu3By9iwdscg=="
                    ],
                    "priority": [
                        "100"
                    ]
                }
            },
            {
                "id": "064fe90b-a21b-4f0f-b45d-38ee656dd882",
                "name": "hmac-generated",
                "providerId": "hmac-generated",
                "subComponents": {},
                "config": {
                    "kid": [
                        "6d5c176b-5c85-4c92-927d-a12871ed0d37"
                    ],
                    "secret": [
                        "rxjVG7-Rp5YNHtutJ2mOb7LuP9AD0seSSB95aZfaMA6uj1OJgMztomYyFOWDbe0BaG7aXT_JSB-Uy_aip52NJw"
                    ],
                    "priority": [
                        "100"
                    ],
                    "algorithm": [
                        "HS256"
                    ]
                }
            },
            {
                "id": "1f1b8f2a-e7a1-47d9-9d4b-834354293a34",
                "name": "aes-generated",
                "providerId": "aes-generated",
                "subComponents": {},
                "config": {
                    "kid": [
                        "f6f053f7-85f0-40fd-beee-0984af0cbd47"
                    ],
                    "secret": [
                        "-Kp5V1FybNp3NdEiEKtJwg"
                    ],
                    "priority": [
                        "100"
                    ]
                }
            }
        ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [
        ""
    ],
    "authenticationFlows": [
        {
            "id": "180676b8-0dcd-4efd-93c6-220f7503f91e",
            "alias": "Account verification options",
            "description": "Method with which to verity the existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-email-verification",
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "flowAlias": "Verify Existing Account by Re-authentication",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "87a4ecf2-dc39-4b2e-94a4-bf0be066762c",
            "alias": "Authentication Options",
            "description": "Authentication options.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "basic-auth",
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "basic-auth-otp",
                    "requirement": "DISABLED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "auth-spnego",
                    "requirement": "DISABLED",
                    "priority": 30,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "7f03af77-dd0d-4324-98d3-27080a7c0008",
            "alias": "Browser - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "a16fc518-2873-4a63-acee-69b23766093a",
            "alias": "Direct Grant - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "direct-grant-validate-otp",
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "f3ae32da-2a25-467c-8062-f3607c99532c",
            "alias": "First broker login - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "cf9362dd-8d12-4901-9113-8f5ee78bce04",
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-confirm-link",
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "flowAlias": "Account verification options",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "fd1f420f-12b5-49b5-9464-0b423fcdb276",
            "alias": "PIN Flow",
            "description": "",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": false,
            "authenticationExecutions": [
                {
                    "authenticator": "direct-grant-validate-username",
                    "requirement": "REQUIRED",
                    "priority": 0,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "f8e9a627-92f7-435b-965a-69e1f3018b4b",
            "alias": "Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "reset-otp",
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "f24d0c76-846a-4e76-9db6-ee0d64ea891b",
            "alias": "User creation or linking",
            "description": "Flow for the existing/non-existing user alternatives",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "create unique user config",
                    "authenticator": "idp-create-user-if-unique",
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "flowAlias": "Handle Existing Account",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "3074eec8-b85e-47e4-a339-3c0a762d717b",
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-username-password-form",
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "flowAlias": "First broker login - Conditional OTP",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "3765a97a-8e87-4358-aadf-0c715b3976fb",
            "alias": "browser",
            "description": "browser based authentication",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-cookie",
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "auth-spnego",
                    "requirement": "DISABLED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "identity-provider-redirector",
                    "requirement": "ALTERNATIVE",
                    "priority": 25,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "flowAlias": "forms",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "f0a80b6a-bf1e-41fd-a583-663a8a820fc7",
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "client-secret",
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "client-jwt",
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "client-secret-jwt",
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "client-x509",
                    "requirement": "ALTERNATIVE",
                    "priority": 40,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "01e9e3e9-85ae-48ea-9e0e-54e5a8d28c10",
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "direct-grant-validate-username",
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "direct-grant-validate-password",
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "requirement": "CONDITIONAL",
                    "priority": 30,
                    "flowAlias": "Direct Grant - Conditional OTP",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "4d563fbf-0d29-485e-b0b2-4aa930605b93",
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "docker-http-basic-authenticator",
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "bcc8d84e-2059-4e56-8bf8-63efb3cf33bd",
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "review profile config",
                    "authenticator": "idp-review-profile",
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "flowAlias": "User creation or linking",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "7afe84d6-fa47-42fe-a138-980d1df8b3f0",
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-username-password-form",
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "flowAlias": "Browser - Conditional OTP",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "30a8ebcd-341f-43e8-b42f-a5f52470f7ab",
            "alias": "http challenge",
            "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "no-cookie-redirect",
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "flowAlias": "Authentication Options",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "03e6d51f-7867-43fd-ac16-271edf6a5eee",
            "alias": "registration",
            "description": "registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-page-form",
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "flowAlias": "registration form",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "2575d4c3-9c1e-49c2-9626-8aec13846a90",
            "alias": "registration form",
            "description": "registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-user-creation",
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "registration-profile-action",
                    "requirement": "REQUIRED",
                    "priority": 40,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "registration-password-action",
                    "requirement": "REQUIRED",
                    "priority": 50,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "registration-recaptcha-action",
                    "requirement": "DISABLED",
                    "priority": 60,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "058a00fe-d554-4982-aec5-a95877005d24",
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "reset-credentials-choose-user",
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "reset-credential-email",
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "reset-password",
                    "requirement": "REQUIRED",
                    "priority": 30,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "requirement": "CONDITIONAL",
                    "priority": 40,
                    "flowAlias": "Reset - Conditional OTP",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "6fd56a00-1750-458f-bb2f-28d04b436e4b",
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "http-basic-authenticator",
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        }
    ],
    "authenticatorConfig": [
        {
            "id": "0d44231b-d358-431e-a225-65eb745dc948",
            "alias": "create unique user config",
            "config": {
                "require.password.update.after.registration": "false"
            }
        },
        {
            "id": "ba34ea10-6980-4379-a620-07fb8b5c0d6f",
            "alias": "review profile config",
            "config": {
                "update.profile.on.first.login": "missing"
            }
        }
    ],
    "requiredActions": [
        {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": true,
            "defaultAction": false,
            "priority": 20,
            "config": {}
        },
        {
            "alias": "terms_and_conditions",
            "name": "Terms and Conditions",
            "providerId": "terms_and_conditions",
            "enabled": false,
            "defaultAction": false,
            "priority": 30,
            "config": {}
        },
        {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": true,
            "defaultAction": false,
            "priority": 40,
            "config": {}
        },
        {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 50,
            "config": {}
        },
        {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": true,
            "defaultAction": false,
            "priority": 1000,
            "config": {}
        },
        {
            "alias": "update_user_locale",
            "name": "Update User Locale",
            "providerId": "update_user_locale",
            "enabled": true,
            "defaultAction": false,
            "priority": 1001,
            "config": {}
        }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
        "clientSessionIdleTimeout": "0",
        "clientSessionMaxLifespan": "0"
    },
    "keycloakVersion": "9.0.3",
    "userManagedAccessAllowed": false
}
