version_info: '0'
resources:
  - "@type": type.googleapis.com/envoy.config.listener.v3.Listener
    name: listener_http
    address:
      socket_address: { address: 0.0.0.0, port_value: 9090 }
    filter_chains:
      - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              rds:
                route_config_name: route_config_0
                config_source: { path: '/etc/envoy/routes.yaml' }
              http_filters:
                - name: envoy.filters.http.grpc_web
                - name: envoy.filters.http.cors
                - name: envoy.filters.http.router
                # - name: envoy.filters.http.ratelimit
                #   # config: {}
                # - name: envoy.filters.http.jwt_authn
                #   # config: {}
  - "@type": type.googleapis.com/envoy.config.listener.v3.Listener
    name: listener_https
    address:
      socket_address: { address: 0.0.0.0, port_value: 9443 }
    filter_chains:
      - transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
            require_client_certificate: true # uncomment if you want client to provide cert
            common_tls_context:
              alpn_protocols: [ 'h2', 'http/1.1' ]
              tls_certificate_sds_secret_configs:
                name: proxy_cert
                sds_config:
                  path: '/etc/envoy/proxy_cert.yaml'
              validation_context_sds_secret_config:
                name: client_validation_context
                sds_config:
                  path: '/etc/envoy/client_validation_context.yaml'
        filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              forward_client_cert_details: SANITIZE_SET
              set_current_client_cert_details:
                subject: true
                # cert: true
                # dns: true
              rds:
                route_config_name: route_config_0
                config_source: { path: '/etc/envoy/routes.yaml' }
              http_filters:
                - name: envoy.filters.http.grpc_web
                - name: envoy.filters.http.cors
                - name: envoy.filters.http.router
                # - name: envoy.filters.http.ratelimit
                #   # config: {}
                # - name: envoy.filters.http.jwt_authn
                #   # config: {}
